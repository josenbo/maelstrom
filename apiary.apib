FORMAT: 1A

# Maelstrom

Einspielen von ODS Ereignissen in die TEI-Eingangsqueues der 
unterschiedlichen Testumgebungen. 

ODS Ereignisse können einzeln oder gebündelt übergeben werden. 
Zu einem späteren Zeitpunkt kann der Verarbeitungsstand der 
Ereignisse abgerufen werden.

Das Protokoll würde es auch erlauben, PackageNotifications 
in ODS-Ausgangsqueues zu übertragen. Diese Funktionalität 
wird aber noch nicht unterstützt. 

## Konfiguration [/configuration]

Liefert Informationen über die Einrichtung der 
Verarbeitungsprozesse. Im Moment ist das vor allem 
die Liste der Verarbeitungszustände und deren 
Beziehungen untereinander (Statusmodell der Verarbeitung).

### Konfiguration lesen [GET]

Ruft die aktuelle Einstellungen ab. 
Hierfür sind keine Parameter erforderlich.
Die configuration_id in der Antwort kann zur Überprüfung
auf Veränderungen verwendet werden. Es ist gewärleistet,
dass jede Änderung der Konfiguration zu einer neuen und
eindeutigen configuration_id führt.

+ Response 200 (application/json)

        {
            "configuration_id": "CFG-4711",
            "states": [
                {
                    "state_id": "State1",
                    "description": "some text (optional)",
                    "is_initial_state": true,
                    "is_final_state": false,
                    "has_failed": false,
                    "predecessors": [
                            "State2",
                            "State3"
                        ],
                    "successor": [
                            "State4",
                            "State5"
                        ]
                }
            ]
        }

## Testumgebungen [/environments]

Testumgebungen stehen autonom nebeneinander. Das Einspielen 
von Ereignissen und das Abrufen von Ergebnissen spielt sich 
immer innerhalb einer konkreten Testumgebung ab.

### Liste der Testumgebungen lesen [GET]

Ruft die Liste der verfügbaren Testumgebungen ab.

+ Response 200 (application/json)

        [
            {
                "environment_id": "DAT",
                "is_active": true
            }
        ]

### Testumgebung [/environments/{environment_id}]

+ Parameters
    + environment_id (string) - Kennung der Testumgebung

#### Information zu einer Testumgebung lesen [GET]

Ruft informationen zu einer Testumgebung ab.

+ Response 200 (application/json)

        {
            "environment_id": "DAT",
            "is_active": true
        }